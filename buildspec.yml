version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.3 # Use PHP 8.3 runtime
    commands:
      - echo "📦 Installing Composer and Laravel dependencies..."

      # Install Composer locally (without global install)
      - curl -sS https://getcomposer.org/installer | php
      - php composer.phar install --no-interaction --prefer-dist --optimize-autoloader
      - echo "✅ Composer dependencies installed."

      # Install additional system packages if needed (e.g., SQLite for testing)
      - echo "📥 Installing additional system dependencies..."
      - export DEBIAN_FRONTEND=noninteractive
      - apt-get update
      - apt-get install -y sqlite3
      - echo "✅ System dependencies installed."

  pre_build:
    commands:
      - echo "🔧 Preparing Laravel environment..."

      # Copy production environment file if it exists
      - if [ -f .env.production ]; then cp .env.production .env; else cp .env.example .env; fi
      - echo "📄 Environment file set."

      # Optional: Create empty SQLite file if DB_CONNECTION is set to sqlite
      - if grep -q "DB_CONNECTION=sqlite" .env; then touch database/database.sqlite; fi
      - echo "🗃️ SQLite database initialized if needed."

      # Run database migrations
      - echo "🧱 Running Laravel migrations..."
      - php artisan migrate --force

      # Generate application encryption key
      - echo "🔑 Generating Laravel app key..."
      - php artisan key:generate --force

      # Laravel optimization (combines config, route, and view caching)
      - echo "🚀 Running Laravel optimization commands..."
      - php artisan optimize
      - echo "✅ Laravel optimized."

  build:
    commands:
      - echo "🧪 Running Laravel unit tests..."
      - php artisan test --testsuite=Unit --stop-on-failure

      - echo "✅ Build and testing phase completed."

  post_build:
    commands:
      - echo "🚀 Post-build: Ready for deployment trigger or next pipeline stage."
